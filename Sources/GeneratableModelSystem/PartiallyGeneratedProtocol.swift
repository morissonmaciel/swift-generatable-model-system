//
//  PartiallyGeneratedProtocol.swift
//  GeneratableModelSystem
//
//  Created by Morisson Marcel on 12/06/25.
//

import Foundation

/// Protocol for types that represent partially generated versions of `GeneratableProtocol` types.
///
/// Types conforming to `PartiallyGeneratedProtocol` are automatically generated by the `@Generatable` macro
/// and represent the same structure as their parent type, but with all `@GeneratableGuide` annotated properties
/// made optional. This allows for streaming partial responses from language models where not all fields
/// may be available immediately.
///
/// ## Automatic Generation
///
/// You don't implement this protocol directly. Instead, the `@Generatable` macro automatically generates
/// a `PartiallyGenerated` associated type for each `@Generatable` struct:
///
/// ```swift
/// @Generatable("Trip plan information")
/// struct TripPlan {
///     @GeneratableGuide("Destination country")
///     var destination: String
///     
///     @GeneratableGuide("List of activities")
///     var activities: [String]
///     
///     @GeneratableGuide("Duration in days")
///     var duration: Int
/// }
///
/// // The macro automatically generates:
/// // struct TripPlanPartiallyGenerated: PartiallyGeneratedProtocol {
/// //     var destination: String?
/// //     var activities: [String]?
/// //     var duration: Int?
/// //     static let parentType = TripPlan.self
/// // }
/// ```
///
/// ## Usage with Language Model Sessions
///
/// Use the partially generated types with streaming responses:
///
/// ```swift
/// let session = LanguageModelSession("gpt-4")
/// 
/// for await partialPlan in session.respondPartially(to: "Create a trip plan") {
///     if let plan = partialPlan as? TripPlan.PartiallyGenerated {
///         // Handle partial updates as they arrive
///         if let destination = plan.destination {
///             print("Destination updated: \(destination)")
///         }
///     }
/// }
/// ```
public protocol PartiallyGeneratedProtocol: Codable, Sendable {
    /// The parent `GeneratableProtocol` type that this partially generated type represents.
    static var parentType: any GeneratableProtocol.Type { get }
    
    /// The description from the parent type, used for consistent schema generation.
    static var description: String { get }
    
    /// The scheme from the parent type, but with all properties marked as optional.
    static var scheme: [String: GuideDescriptor] { get }
}

public extension PartiallyGeneratedProtocol {
    /// Returns a formatted JSON string representation of the partial type's schema.
    ///
    /// This method converts the `scheme` dictionary to a pretty-printed JSON string
    /// that can be used in prompts to guide language model responses. All properties
    /// in the schema will be marked as optional to support partial generation.
    ///
    /// ## Example Output
    /// ```json
    /// {
    ///   "destination": {
    ///     "description": "Destination country",
    ///     "type": "String",
    ///     "isOptional": true
    ///   },
    ///   "activities": {
    ///     "description": "List of activities",
    ///     "type": "array of strings",
    ///     "isOptional": true
    ///   }
    /// }
    /// ```
    static var jsonDescription: String {
        let encoder = JSONEncoder()
        encoder.outputFormatting = [.sortedKeys, .prettyPrinted]
        let json = try? encoder.encode(scheme)
        let string = String(data: json ?? Data(), encoding: String.Encoding.utf8) ?? ""
        return string
    }
}